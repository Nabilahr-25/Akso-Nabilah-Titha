name: Http_and_Web_Akso

services:
  nginx:
    image: nginx:latest
    container_name: nginx_server
    ports:
      - "8088:80"
    networks:
      - web_network
    configs:
      - source: nginx_default_conf
        target: /etc/nginx/conf.d/nginx.conf  
    volumes:
      - ./nginx/html:/usr/share/nginx/html
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:latest
    container_name: mysql_server
    environment:
      MYSQL_ROOT_PASSWORD: composepassword    
      MYSQL_DATABASE: compose_db               
      MYSQL_USER: composeuser                
      MYSQL_PASSWORD: composepass            
    ports:
      - "3306:3306"
    volumes:
      - ./sql:/docker-entrypoint-initdb.d/   
    networks:
      - app_network
    restart: always

  redis:
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"                           # Port default Redis
    networks:
      - app_network
    restart: always

  mariadb_server:
    image: mariadb:latest
    container_name: mariadb_server
    environment:
      MARIADB_ROOT_PASSWORD: mdbpassword      
      MARIADB_DATABASE: phpmyadmin_db          
      MARIADB_USER: mdbuser               
      MARIADB_PASSWORD: mdbpass           
    ports:
      - "3307:3306"                           
    volumes:
      - ./mariadb:/docker-entrypoint-initdb.d 
    networks:
      - app_network
    restart: always

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin_server
    environment:
      PMA_HOST: mariadb_server                # Host MariaDB
      PMA_PORT: 3306                          # Port MariaDB
      PMA_ARBITRARY: 1                        # izin koneksi ke server arbitrer
    ports:
      - "8081:80"                             # Port akses phpMyAdmin
    networks:
      - app_network
    restart: always

networks:
  app_network:
    driver: bridge
  web_network:
    driver: bridge

configs:
  nginx_default_conf:
    file: ./nginx/nginx.conf
